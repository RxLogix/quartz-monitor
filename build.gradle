buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.2.4"
    }
}

plugins {
    id "io.spring.dependency-management" version "0.5.2.RELEASE"
    id "com.jfrog.bintray" version "1.5"
}

version "4.x-M1"
group "org.grails.plugins"

apply plugin: 'maven-publish'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "asset-pipeline"
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-gsp"

ext {
    grailsVersion = project.grailsVersion
}


sourceCompatibility = 1.8
targetCompatibility = 1.8


repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    provided 'org.springframework.boot:spring-boot-starter-logging'
    provided "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-autoconfigure"
    provided "org.springframework.boot:spring-boot-starter-tomcat"

    provided "org.grails:grails-web-boot"
    provided "org.grails:grails-dependencies"
    compileOnly group: 'jakarta.servlet', name: 'jakarta.servlet-api'
    compile "org.grails.plugins:quartz:2.0.0.M4"
    compile "org.quartz-scheduler:quartz:2.2.1"
    compile "com.bertramlabs.plugins:asset-pipeline-grails:3.2.4"
    console "org.grails:grails-console"
}
task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
task packageJavadoc(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

task packageGroovydoc(type: Jar) {
    from groovydoc
    classifier = 'groovydoc'
}

assets {
    packagePlugin = true
}

publishing {

    publications {
        mavenJar(MavenPublication) {
            from components.java
            artifact sourceJar
            artifact packageJavadoc
            artifact packageGroovydoc
        }
    }

    repositories {
        maven {
            name = "NexusRepo"
            credentials {
                username project.findProperty("nexusUsername") ?: System.getenv("NEXUS_USERNAME")
                password project.findProperty("nexusPassword") ?: System.getenv("NEXUS_PASSWORD")
            }
            url project.findProperty("nexusUrl") ?: System.getenv("NEXUS_URL")
        }

    }
}
