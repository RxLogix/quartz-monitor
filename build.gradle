

plugins {
    id "groovy"
    id "idea"
    id "org.grails.grails-web"
    id "org.grails.grails-gsp"
    id "org.grails.grails-plugin"
    id "application"
    id "eclipse"
    id "maven-publish"
    id "asset-pipeline"
    id "java-library"
}


group = "org.grails.plugins"

ext {
    grailsVersion = project.grailsVersion
}


java {
    sourceCompatibility = JavaVersion.toVersion("17")
}



repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}
configurations {
    all {
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"

    implementation "org.grails:grails-web-boot"
    implementation "org.grails:grails-dependencies"
    implementation group: 'jakarta.servlet', name: 'jakarta.servlet-api'
    implementation group: 'org.grails.plugins', name: 'quartz', version: '3.0.0'
    implementation "com.bertramlabs.plugins:asset-pipeline-grails:4.3.0"
    implementation "org.grails:grails-console"
}
application {
    mainClass.set("quartz.monitor.Application")
}
bootRun {
    ignoreExitValue true
    jvmArgs(
            '-Dspring.output.ansi.enabled=always',
            '-noverify',
            '-XX:TieredStopAtLevel=1',
            '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}
task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
task packageJavadoc(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

task packageGroovydoc(type: Jar) {
    from groovydoc
    classifier = 'groovydoc'
}

assets {
    packagePlugin = true
}

publishing {

    publications {
        mavenJar(MavenPublication) {
            from components.java
            artifact sourceJar
            artifact packageJavadoc
            artifact packageGroovydoc
        }
    }

    repositories {
        maven {
            name = "NexusRepo"
            credentials {
                username project.findProperty("nexusUsername") ?: System.getenv("NEXUS_USERNAME")
                password project.findProperty("nexusPassword") ?: System.getenv("NEXUS_PASSWORD")
            }
            url project.findProperty("nexusUrl") ?: System.getenv("NEXUS_URL")
            allowInsecureProtocol = true
        }

    }
}
